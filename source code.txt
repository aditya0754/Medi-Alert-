#include <Wire.h>
#include <LiquidCrystal_I2C.h>
#include <RTClib.h>
#include <SoftwareSerial.h>

// LCD
LiquidCrystal_I2C lcd(0x27, 16, 2);

// RTC
RTC_DS3231 rtc;

// SIM800 GSM
SoftwareSerial sim800(10, 11); // RX, TX

// Pins
const int buzzerPin = 2;
const int ledPins[3] = {3, 4, 5};
const int setHourBtn = 6;
const int setMinBtn = 7;
const int confirmBtn = 8;
const int ackButtonPin = 9;

// Medicine times (3 slots)
int medicineHours[3];
int medicineMinutes[3];

// Quotes
String quotes[] = {
  "Stay strong!",
  "You got this!",
};

// Snooze support
bool snoozed[3] = {false, false, false};
unsigned long snoozeTimes[3] = {0, 0, 0};

void setup() {
  Serial.begin(9600);
  sim800.begin(9600);

  lcd.begin(16, 2);
  lcd.backlight();

  if (!rtc.begin()) {
    lcd.clear();
    lcd.print("RTC not found!");
    while (1);
  }

  pinMode(buzzerPin, OUTPUT);
  for (int i = 0; i < 3; i++) pinMode(ledPins[i], OUTPUT);
  pinMode(setHourBtn, INPUT_PULLUP);
  pinMode(setMinBtn, INPUT_PULLUP);
  pinMode(confirmBtn, INPUT_PULLUP);
  pinMode(ackButtonPin, INPUT_PULLUP);

  lcd.clear();
  lcd.print("Set Med Times");
  delay(2000);

  for (int i = 0; i < 3; i++) {
    setMedicineTime(i);
  }

  lcd.clear();
  lcd.print("System Ready");
  delay(2000);
  lcd.clear();
}

void loop() {
  DateTime now = rtc.now();

  showClock(now);

  for (int i = 0; i < 3; i++) {
    if (snoozed[i]) {
      if (millis() - snoozeTimes[i] >= 600000) { // 10 minutes
        snoozed[i] = false;
        triggerAlarm(i);
      }
    } else if (now.hour() == medicineHours[i] && now.minute() == medicineMinutes[i] && now.second() == 0) {
      triggerAlarm(i);
    }
  }

  delay(500);
}

void showClock(DateTime now) {
  lcd.setCursor(0, 1);
  printDigits(now.hour());
  lcd.print(":");
  printDigits(now.minute());
  lcd.print(":");
  printDigits(now.second());

  lcd.setCursor(0, 0);
  lcd.print(shortDayOfWeek(now.dayOfTheWeek())); // Mon, Tue...
  lcd.print(" ");
  printDigits(now.day());
  lcd.print("/");
  printDigits(now.month());
  lcd.print("/");
  lcd.print(now.year());
}

String shortDayOfWeek(int day) {
  const char* days[] = {"Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"};
  return days[day];
}

void printDigits(int digits) {
  if (digits < 10)
    lcd.print("0");
  lcd.print(digits);
}

void setMedicineTime(int index) {
  int hour = 0, minute = 0;

  lcd.clear();
  lcd.print("Set Time ");
  lcd.print(index + 1);
  delay(1000);

  while (digitalRead(confirmBtn) == HIGH) {
    lcd.setCursor(0, 1);
    printDigits(hour);
    lcd.print(":");
    printDigits(minute);

    if (digitalRead(setHourBtn) == LOW) {
      hour = (hour + 1) % 24;
      delay(300);
    }

    if (digitalRead(setMinBtn) == LOW) {
      minute = (minute + 1) % 60;
      delay(300);
    }
  }

  delay(500); // Debounce

  medicineHours[index] = hour;
  medicineMinutes[index] = minute;

  lcd.clear();
  lcd.print("Time Saved: ");
  lcd.setCursor(0, 1);
  printDigits(hour);
  lcd.print(":");
  printDigits(minute);
  delay(1000);
}

bool checkSnoozeMessage() {
  if (sim800.available()) {
    String msg = sim800.readString();
    msg.toUpperCase();
    if (msg.indexOf("SNOOZE") != -1) {
      return true;
    }
  }
  return false;
}

void triggerAlarm(int index) {
  unsigned long startTime = millis();
  bool acknowledged = false;

  lcd.clear();
  lcd.print("Take Medicine!");
  lcd.setCursor(0, 1);
  printDigits(medicineHours[index]);
  lcd.print(":");
  printDigits(medicineMinutes[index]);

  while (millis() - startTime < 60000) {
    digitalWrite(buzzerPin, HIGH);
    digitalWrite(ledPins[index], HIGH);
    delay(500);
    digitalWrite(buzzerPin, LOW);
    digitalWrite(ledPins[index], LOW);
    delay(500);

    if (digitalRead(ackButtonPin) == LOW) {
      acknowledged = true;
      break;
    }
  }

  if (acknowledged) {
    showQuote();
  } else {
    lcd.clear();
    lcd.print("Sending Msg...");
    delay(1000); // Optional: show message before sending
    sendSMS("Medicine not taken at scheduled time!");
  }

  lcd.clear();
}



void showQuote() {
  int quoteIndex = random(0, sizeof(quotes) / sizeof(quotes[0]));
  lcd.clear();
  lcd.print("Good Job!");
  lcd.setCursor(0, 1);
  lcd.print(quotes[quoteIndex]);
  delay(3000); // Show for 3 seconds
}

void sendSMS(String message) {
  sim800.println("AT+CMGF=1");
  delay(100);
  sim800.println("AT+CMGS=\"+917020615262\""); // Replace with your number
  delay(100);
  sim800.print(message);
  delay(100);
  sim800.write(26); // Ctrl+Z
  delay(1000);
}
